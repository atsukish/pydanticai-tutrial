[project]
name = "pydantic-ai-demo"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "dirty-equals>=0.8.0",
    "jupyter>=1.1.1",
    "langchain-core>=0.3.22",
    "langchain-openai>=0.2.11",
    "langcheck[ja]>=0.8.1",
    "pandas>=2.2.3",
    "pydantic-ai>=0.0.12",
    "python-dotenv>=1.0.1",
    "tabulate>=0.9.0",
]

[dependency-groups]
dev = [
    "black>=24.10.0",
    "mypy>=1.13.0",
    "pytest-asyncio>=0.24.0",
    "pytest>=8.3.4",
    "ruff>=0.8.2",
    "trio>=0.27.0",
]

[tool.mypy]
plugins = ["pydantic.mypy"]
show_column_numbers = true
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_return_any = true
warn_unused_ignores = true
warn_redundant_casts = true

[tool.black]
line-length = 79

[tool.ruff]
line-length = 79
select = [
    "E",   # pycodestype error
    "W",   # pycodestyle warning
    "F",   # pyflakes
    "C90", # mccabe
    "I",   # isort
    "D",   # pydocstyle
    "B",   # flake8-bugbear
    "COM", # flake8-commas
    "S",   # flake8-bandit 
    "PTH", # flake8-use-pathlib 
]
ignore = [
    "D415", # pydocstyle about First line should end with a '.' , '?' or '!'
    "E501", # line too long, handled by black
]
unfixable = [
    "F401", # disable auto-fix for unused-imports
    "F841", # disable auto-fix for unused-variable
]
target-version = "py310"

[tool.ruff.per-file-ignores]
# ignore assert error only in unnit-test
"*test_*.py" = ["S101"]
"*_test.py" = ["S101"]

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
